
package com.turkcelltech.mf.tpay.web.provision;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ProvisionService", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ProvisionService {


    /**
     * 
     * @param amount
     * @param merchantCode
     * @param approvalCode
     * @param pointAmount
     * @param orderId
     * @param reconciliationDate
     * @param responseHeader
     * @param iyzPaymentId
     * @param extraParameters
     * @param cardToken
     * @param paymentType
     * @param acquirerBankCode
     * @param pin
     * @param referenceNumber
     * @param threeDSessionId
     * @param installmentCount
     * @param cardId
     * @param originalReferenceNumber
     * @param iyzPaymentTransactionId
     * @param requestHeader
     * @param currency
     * @param msisdn
     * @param issuerBankCode
     */
    @WebMethod
    @RequestWrapper(localName = "provision", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.ProvisionRequest")
    @ResponseWrapper(localName = "provisionResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.ProvisionResponse")
    public void provision(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "acquirerBankCode", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<String> acquirerBankCode,
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "cardId", targetNamespace = "")
        String cardId,
        @WebParam(name = "cardToken", targetNamespace = "")
        String cardToken,
        @WebParam(name = "currency", targetNamespace = "")
        String currency,
        @WebParam(name = "installmentCount", targetNamespace = "")
        Integer installmentCount,
        @WebParam(name = "merchantCode", targetNamespace = "")
        String merchantCode,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "originalReferenceNumber", targetNamespace = "")
        String originalReferenceNumber,
        @WebParam(name = "paymentType", targetNamespace = "")
        PaymentType paymentType,
        @WebParam(name = "pin", targetNamespace = "")
        String pin,
        @WebParam(name = "pointAmount", targetNamespace = "")
        String pointAmount,
        @WebParam(name = "referenceNumber", targetNamespace = "")
        String referenceNumber,
        @WebParam(name = "threeDSessionId", targetNamespace = "")
        String threeDSessionId,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "approvalCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> approvalCode,
        @WebParam(name = "issuerBankCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> issuerBankCode,
        @WebParam(name = "iyzPaymentId", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> iyzPaymentId,
        @WebParam(name = "iyzPaymentTransactionId", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> iyzPaymentTransactionId,
        @WebParam(name = "orderId", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> orderId,
        @WebParam(name = "reconciliationDate", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> reconciliationDate);

    /**
     * 
     * @param merchantCode
     * @param acquirerBankCode
     * @param referenceNumber
     * @param orderId
     * @param provisionList
     * @param originalReferenceNumber
     * @param responseHeader
     * @param extraParameters
     * @param requestHeader
     * @param msisdn
     * @param status
     */
    @WebMethod
    @RequestWrapper(localName = "inquire", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.InquireRequest")
    @ResponseWrapper(localName = "inquireResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.InquireResponse")
    public void inquire(
        @WebParam(name = "extraParameters", targetNamespace = "")
        List<ExtraParameter> extraParameters,
        @WebParam(name = "merchantCode", targetNamespace = "")
        String merchantCode,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "originalReferenceNumber", targetNamespace = "")
        String originalReferenceNumber,
        @WebParam(name = "referenceNumber", targetNamespace = "")
        String referenceNumber,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "acquirerBankCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> acquirerBankCode,
        @WebParam(name = "orderId", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> orderId,
        @WebParam(name = "provisionList", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<List<Provision>> provisionList,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status);

    /**
     * 
     * @param merchantCode
     * @param approvalCode
     * @param referenceNumber
     * @param reconciliationDate
     * @param originalReferenceNumber
     * @param responseHeader
     * @param extraParameters
     * @param retryStatusDescription
     * @param requestHeader
     * @param msisdn
     * @param retryStatusCode
     */
    @WebMethod
    @RequestWrapper(localName = "reverse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.ReverseRequest")
    @ResponseWrapper(localName = "reverseResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.ReverseResponse")
    public void reverse(
        @WebParam(name = "extraParameters", targetNamespace = "")
        List<ExtraParameter> extraParameters,
        @WebParam(name = "merchantCode", targetNamespace = "")
        String merchantCode,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "originalReferenceNumber", targetNamespace = "")
        String originalReferenceNumber,
        @WebParam(name = "referenceNumber", targetNamespace = "")
        String referenceNumber,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "approvalCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> approvalCode,
        @WebParam(name = "reconciliationDate", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> reconciliationDate,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "retryStatusCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> retryStatusCode,
        @WebParam(name = "retryStatusDescription", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> retryStatusDescription);

    /**
     * 
     * @param amount
     * @param merchantCode
     * @param approvalCode
     * @param pointAmount
     * @param orderId
     * @param reconciliationDate
     * @param responseHeader
     * @param iyzPaymentId
     * @param extraParameters
     * @param cardToken
     * @param paymentType
     * @param subMerchants
     * @param acquirerBankCode
     * @param pin
     * @param referenceNumber
     * @param threeDSessionId
     * @param installmentCount
     * @param cardId
     * @param customerEmail
     * @param iyzPaymentTransactionId
     * @param requestHeader
     * @param currency
     * @param msisdn
     * @param issuerBankCode
     */
    @WebMethod
    @RequestWrapper(localName = "provisionForMarketPlace", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.ProvisionForMarketPlaceRequest")
    @ResponseWrapper(localName = "provisionForMarketPlaceResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.ProvisionForMarketPlaceResponse")
    public void provisionForMarketPlace(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "acquirerBankCode", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<String> acquirerBankCode,
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "cardId", targetNamespace = "")
        String cardId,
        @WebParam(name = "cardToken", targetNamespace = "")
        String cardToken,
        @WebParam(name = "currency", targetNamespace = "")
        String currency,
        @WebParam(name = "customerEmail", targetNamespace = "")
        String customerEmail,
        @WebParam(name = "installmentCount", targetNamespace = "")
        Integer installmentCount,
        @WebParam(name = "merchantCode", targetNamespace = "")
        String merchantCode,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "paymentType", targetNamespace = "")
        PaymentType paymentType,
        @WebParam(name = "pin", targetNamespace = "")
        String pin,
        @WebParam(name = "pointAmount", targetNamespace = "")
        String pointAmount,
        @WebParam(name = "referenceNumber", targetNamespace = "")
        String referenceNumber,
        @WebParam(name = "subMerchants", targetNamespace = "")
        List<SubMerchant> subMerchants,
        @WebParam(name = "threeDSessionId", targetNamespace = "")
        String threeDSessionId,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "approvalCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> approvalCode,
        @WebParam(name = "issuerBankCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> issuerBankCode,
        @WebParam(name = "iyzPaymentId", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> iyzPaymentId,
        @WebParam(name = "iyzPaymentTransactionId", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> iyzPaymentTransactionId,
        @WebParam(name = "orderId", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> orderId,
        @WebParam(name = "reconciliationDate", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> reconciliationDate);

    /**
     * 
     * @param amount
     * @param merchantCode
     * @param is3DOperation
     * @param orderId
     * @param referenceNumber
     * @param installmentCount
     * @param issuerInfo
     * @param responseHeader
     * @param extraParameters
     * @param requestHeader
     * @param msisdn
     * @param applicationCode
     */
    @WebMethod
    @RequestWrapper(localName = "startProvision", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.StartProvisionRequest")
    @ResponseWrapper(localName = "startProvisionResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.StartProvisionResponse")
    public void startProvision(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "applicationCode", targetNamespace = "")
        String applicationCode,
        @WebParam(name = "installmentCount", targetNamespace = "")
        Integer installmentCount,
        @WebParam(name = "is3DOperation", targetNamespace = "")
        boolean is3DOperation,
        @WebParam(name = "merchantCode", targetNamespace = "")
        String merchantCode,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "orderId", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<String> orderId,
        @WebParam(name = "referenceNumber", targetNamespace = "")
        String referenceNumber,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "issuerInfo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> issuerInfo);

    /**
     * 
     * @param amount
     * @param brandName
     * @param merchantCode
     * @param taosRefNum
     * @param acquirerBankCode
     * @param responseHeader
     * @param extraParameters
     * @param requestHeader
     * @param msisdn
     * @param applicationCode
     */
    @WebMethod
    @RequestWrapper(localName = "isAvailableForProvision", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.IsAvailableForProvisionRequest")
    @ResponseWrapper(localName = "isAvailableForProvisionResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.IsAvailableForProvisionResponse")
    public void isAvailableForProvision(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "applicationCode", targetNamespace = "")
        String applicationCode,
        @WebParam(name = "brandName", targetNamespace = "")
        String brandName,
        @WebParam(name = "merchantCode", targetNamespace = "")
        String merchantCode,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "taosRefNum", targetNamespace = "")
        String taosRefNum,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "acquirerBankCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> acquirerBankCode);

    /**
     * 
     * @param cardId
     * @param extraParameters
     * @param requestHeader
     * @param msisdn
     * @return
     *     returns com.turkcelltech.mf.tpay.web.provision.ResponseHeader
     */
    @WebMethod
    @WebResult(name = "responseHeader", targetNamespace = "")
    @RequestWrapper(localName = "deleteCard", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.DeleteCardRequest")
    @ResponseWrapper(localName = "deleteCardResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.DeleteCardResponse")
    public ResponseHeader deleteCard(
        @WebParam(name = "cardId", targetNamespace = "")
        String cardId,
        @WebParam(name = "extraParameters", targetNamespace = "")
        List<ExtraParameter> extraParameters,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader);

    /**
     * 
     * @param responseHeader
     * @param extraParameters
     * @param termsOfServiceHtmlContentEN
     * @param requestHeader
     * @param eulaId
     * @param termsOfServiceHtmlContentTR
     */
    @WebMethod
    @RequestWrapper(localName = "getTermsOfServiceContent", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.GetTermsOfServiceContentRequest")
    @ResponseWrapper(localName = "getTermsOfServiceContentResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.GetTermsOfServiceContentResponse")
    public void getTermsOfServiceContent(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "eulaId", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<Long> eulaId,
        @WebParam(name = "termsOfServiceHtmlContentEN", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> termsOfServiceHtmlContentEN,
        @WebParam(name = "termsOfServiceHtmlContentTR", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> termsOfServiceHtmlContentTR);

    /**
     * 
     * @param regEx
     * @param cardId
     * @param responseHeader
     * @param otpValidationId
     * @param extraParameters
     * @param requestHeader
     * @param msisdn
     * @param cardToken
     */
    @WebMethod
    @RequestWrapper(localName = "sendOTP", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.SendOTPRequest")
    @ResponseWrapper(localName = "sendOTPResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.SendOTPResponse")
    public void sendOTP(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "cardId", targetNamespace = "")
        String cardId,
        @WebParam(name = "cardToken", targetNamespace = "")
        String cardToken,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "otpValidationId", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> otpValidationId,
        @WebParam(name = "regEx", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> regEx);

    /**
     * 
     * @param totalPostAuthCount
     * @param totalReverseAmount
     * @param reconciliationResult
     * @param merchantCode
     * @param totalPostAuthReverseAmount
     * @param totalRefundCount
     * @param reconciliationDate
     * @param totalPreAuthReverseAmount
     * @param responseHeader
     * @param extraParameters
     * @param totalPostAuthAmount
     * @param totalPreAuthCount
     * @param totalPreAuthAmount
     * @param totalPreAuthReverseCount
     * @param totalReverseCount
     * @param totalSaleAmount
     * @param totalSaleCount
     * @param requestHeader
     * @param totalRefundAmount
     * @param totalPostAuthReverseCount
     */
    @WebMethod
    @RequestWrapper(localName = "summaryReconciliation", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.SummaryReconciliationRequest")
    @ResponseWrapper(localName = "summaryReconciliationResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.SummaryReconciliationResponse")
    public void summaryReconciliation(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "merchantCode", targetNamespace = "")
        String merchantCode,
        @WebParam(name = "reconciliationDate", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<String> reconciliationDate,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "totalPostAuthAmount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<String> totalPostAuthAmount,
        @WebParam(name = "totalPostAuthCount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Integer> totalPostAuthCount,
        @WebParam(name = "totalPostAuthReverseAmount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<String> totalPostAuthReverseAmount,
        @WebParam(name = "totalPostAuthReverseCount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Integer> totalPostAuthReverseCount,
        @WebParam(name = "totalPreAuthAmount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<String> totalPreAuthAmount,
        @WebParam(name = "totalPreAuthCount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Integer> totalPreAuthCount,
        @WebParam(name = "totalPreAuthReverseAmount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<String> totalPreAuthReverseAmount,
        @WebParam(name = "totalPreAuthReverseCount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Integer> totalPreAuthReverseCount,
        @WebParam(name = "totalRefundAmount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<String> totalRefundAmount,
        @WebParam(name = "totalRefundCount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Integer> totalRefundCount,
        @WebParam(name = "totalReverseAmount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<String> totalReverseAmount,
        @WebParam(name = "totalReverseCount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Integer> totalReverseCount,
        @WebParam(name = "totalSaleAmount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<String> totalSaleAmount,
        @WebParam(name = "totalSaleCount", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Integer> totalSaleCount,
        @WebParam(name = "reconciliationResult", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> reconciliationResult,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader);

    /**
     * 
     * @param responseHeader
     * @param extraParameters
     * @param requestHeader
     * @param plate
     * @param loyaltyCard
     * @param msisdn
     */
    @WebMethod
    @RequestWrapper(localName = "registerSubscriber", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.RegisterSubscriberRequest")
    @ResponseWrapper(localName = "registerSubscriberResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.RegisterSubscriberResponse")
    public void registerSubscriber(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "loyaltyCard", targetNamespace = "")
        LoyaltyCard loyaltyCard,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "plate", targetNamespace = "")
        String plate,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader);

    /**
     * 
     * @param isDefault
     * @param threeDSessionId
     * @param cardId
     * @param otpValidationId
     * @param responseHeader
     * @param extraParameters
     * @param alias
     * @param requestHeader
     * @param otp
     * @param eulaId
     * @param msisdn
     */
    @WebMethod
    @RequestWrapper(localName = "updateCard", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.UpdateCardRequest")
    @ResponseWrapper(localName = "updateCardResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.UpdateCardResponse")
    public void updateCard(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "alias", targetNamespace = "")
        String alias,
        @WebParam(name = "cardId", targetNamespace = "")
        String cardId,
        @WebParam(name = "eulaId", targetNamespace = "")
        String eulaId,
        @WebParam(name = "isDefault", targetNamespace = "")
        Boolean isDefault,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "otp", targetNamespace = "")
        String otp,
        @WebParam(name = "otpValidationId", targetNamespace = "")
        String otpValidationId,
        @WebParam(name = "threeDSessionId", targetNamespace = "")
        String threeDSessionId,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader);

    /**
     * 
     * @param taosRefNum
     * @param referenceNumber
     * @param provisionType
     * @param responseHeader
     * @param resultCode
     * @param extraParameters
     * @param requestHeader
     * @param resultDescription
     * @param msisdn
     * @param status
     */
    @WebMethod
    @RequestWrapper(localName = "inquireForOilService", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.InquireForOilServiceRequest")
    @ResponseWrapper(localName = "inquireForOilServiceResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.InquireForOilServiceResponse")
    public void inquireForOilService(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "referenceNumber", targetNamespace = "")
        String referenceNumber,
        @WebParam(name = "taosRefNum", targetNamespace = "")
        String taosRefNum,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "provisionType", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> provisionType,
        @WebParam(name = "resultCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> resultCode,
        @WebParam(name = "resultDescription", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> resultDescription,
        @WebParam(name = "status", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> status);

    /**
     * 
     * @param currentStep
     * @param merchantCode
     * @param threeDOperationResult
     * @param referenceNumber
     * @param threeDSessionId
     * @param mdErrorMessage
     * @param responseHeader
     * @param mdStatus
     * @param extraParameters
     * @param requestHeader
     * @param msisdn
     */
    @WebMethod
    @RequestWrapper(localName = "getThreeDSessionResult", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.GetThreeDSessionResultRequest")
    @ResponseWrapper(localName = "getThreeDSessionResultResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.GetThreeDSessionResultResponse")
    public void getThreeDSessionResult(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "merchantCode", targetNamespace = "")
        String merchantCode,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "referenceNumber", targetNamespace = "")
        String referenceNumber,
        @WebParam(name = "threeDSessionId", targetNamespace = "")
        String threeDSessionId,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "currentStep", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> currentStep,
        @WebParam(name = "mdErrorMessage", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> mdErrorMessage,
        @WebParam(name = "mdStatus", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> mdStatus,
        @WebParam(name = "threeDOperationResult", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ThreeDOperationResult> threeDOperationResult);

    /**
     * 
     * @param cardList
     * @param responseHeader
     * @param extraParameters
     * @param requestHeader
     * @param msisdn
     * @param eulaId
     */
    @WebMethod
    @RequestWrapper(localName = "getCards", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.GetCardsRequest")
    @ResponseWrapper(localName = "getCardsResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.GetCardsResponse")
    public void getCards(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "cardList", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<List<Card>> cardList,
        @WebParam(name = "eulaId", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> eulaId);

    /**
     * 
     * @param amount
     * @param merchantCode
     * @param approvalCode
     * @param pointAmount
     * @param reconciliationDate
     * @param responseHeader
     * @param extraParameters
     * @param retryStatusDescription
     * @param referenceNumber
     * @param originalReferenceNumber
     * @param requestHeader
     * @param msisdn
     * @param retryStatusCode
     */
    @WebMethod
    @RequestWrapper(localName = "refund", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.RefundRequest")
    @ResponseWrapper(localName = "refundResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.RefundResponse")
    public void refund(
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "extraParameters", targetNamespace = "")
        List<ExtraParameter> extraParameters,
        @WebParam(name = "merchantCode", targetNamespace = "")
        String merchantCode,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "originalReferenceNumber", targetNamespace = "")
        String originalReferenceNumber,
        @WebParam(name = "pointAmount", targetNamespace = "")
        String pointAmount,
        @WebParam(name = "referenceNumber", targetNamespace = "")
        String referenceNumber,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "approvalCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> approvalCode,
        @WebParam(name = "reconciliationDate", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> reconciliationDate,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "retryStatusCode", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> retryStatusCode,
        @WebParam(name = "retryStatusDescription", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> retryStatusDescription);

    /**
     * 
     * @param amount
     * @param merchantCode
     * @param responseHeader
     * @param extraParameters
     * @param cardToken
     * @param target
     * @param transactionType
     * @param referenceNumber
     * @param threeDSessionId
     * @param installmentCount
     * @param cardId
     * @param requestHeader
     * @param msisdn
     */
    @WebMethod
    @RequestWrapper(localName = "getThreeDSession", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.GetThreeDSessionRequest")
    @ResponseWrapper(localName = "getThreeDSessionResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.GetThreeDSessionResponse")
    public void getThreeDSession(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "cardId", targetNamespace = "")
        String cardId,
        @WebParam(name = "cardToken", targetNamespace = "")
        String cardToken,
        @WebParam(name = "installmentCount", targetNamespace = "")
        Integer installmentCount,
        @WebParam(name = "merchantCode", targetNamespace = "")
        String merchantCode,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "referenceNumber", targetNamespace = "")
        String referenceNumber,
        @WebParam(name = "target", targetNamespace = "")
        Target target,
        @WebParam(name = "transactionType", targetNamespace = "")
        TransactionType transactionType,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "threeDSessionId", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> threeDSessionId);

    /**
     * 
     * @param isDefault
     * @param threeDSessionId
     * @param cardId
     * @param otpValidationId
     * @param responseHeader
     * @param extraParameters
     * @param alias
     * @param requestHeader
     * @param otp
     * @param eulaId
     * @param msisdn
     * @param cardToken
     */
    @WebMethod
    @RequestWrapper(localName = "registerCard", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.RegisterCardRequest")
    @ResponseWrapper(localName = "registerCardResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.RegisterCardResponse")
    public void registerCard(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "alias", targetNamespace = "")
        String alias,
        @WebParam(name = "cardToken", targetNamespace = "")
        String cardToken,
        @WebParam(name = "eulaId", targetNamespace = "")
        String eulaId,
        @WebParam(name = "isDefault", targetNamespace = "")
        Boolean isDefault,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "otp", targetNamespace = "")
        String otp,
        @WebParam(name = "otpValidationId", targetNamespace = "")
        String otpValidationId,
        @WebParam(name = "threeDSessionId", targetNamespace = "")
        String threeDSessionId,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "cardId", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<String> cardId);

    /**
     * 
     * @param merchantCode
     * @param nextPartitionNo
     * @param reconciliationDate
     * @param responseHeader
     * @param transactionList
     * @param extraParameters
     * @param requestHeader
     * @param partitionNo
     */
    @WebMethod
    @RequestWrapper(localName = "getProvisionHistory", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.GetProvisionHistoryRequest")
    @ResponseWrapper(localName = "getProvisionHistoryResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.GetProvisionHistoryResponse")
    public void getProvisionHistory(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "merchantCode", targetNamespace = "")
        String merchantCode,
        @WebParam(name = "partitionNo", targetNamespace = "")
        Integer partitionNo,
        @WebParam(name = "reconciliationDate", targetNamespace = "")
        String reconciliationDate,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader,
        @WebParam(name = "nextPartitionNo", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<Integer> nextPartitionNo,
        @WebParam(name = "transactionList", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<List<Transaction>> transactionList);

    /**
     * 
     * @param taosRefNum
     * @param referenceNumber
     * @param threeDSessionId
     * @param cardId
     * @param responseHeader
     * @param extraParameters
     * @param requestHeader
     * @param msisdn
     * @param cardToken
     */
    @WebMethod
    @RequestWrapper(localName = "provisionForOilService", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.ProvisionForOilServiceRequest")
    @ResponseWrapper(localName = "provisionForOilServiceResponse", targetNamespace = "http://provision.web.tpay.mf.turkcelltech.com/", className = "com.turkcelltech.mf.tpay.web.provision.ProvisionForOilServiceResponse")
    public void provisionForOilService(
        @WebParam(name = "extraParameters", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<List<ExtraParameter>> extraParameters,
        @WebParam(name = "requestHeader", targetNamespace = "")
        RequestHeader requestHeader,
        @WebParam(name = "cardId", targetNamespace = "")
        String cardId,
        @WebParam(name = "cardToken", targetNamespace = "")
        String cardToken,
        @WebParam(name = "msisdn", targetNamespace = "")
        String msisdn,
        @WebParam(name = "referenceNumber", targetNamespace = "")
        String referenceNumber,
        @WebParam(name = "taosRefNum", targetNamespace = "")
        String taosRefNum,
        @WebParam(name = "threeDSessionId", targetNamespace = "")
        String threeDSessionId,
        @WebParam(name = "responseHeader", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ResponseHeader> responseHeader);

}
